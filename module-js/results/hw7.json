[
	{
		"id": "Cg0IiNX8-wgQzor49acH",
		"emailId": "tmanj16",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MjQwNzQ3NTg0OFpa",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "17Xn86M36noCBvauZ9oU0v-JEaGA6zgut",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=17Xn86M36noCBvauZ9oU0v-JEaGA6zgut&export=download",
			"title": "final-project (1) tmanj16.zip"
		},
		"timeStamp": "2021-02-05T18:46:45.177Z",
		"score": 0
	},
	{
		"id": "Cg4IvJCx8ZMBEM6K-PWnBw",
		"emailId": "dlomt19",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/Mzk2OTc3OTUxMzJa",
		"results": [
			{
				"error": true,
				"message": "დავალება არ არის zip ფაილში"
			}
		],
		"attachment": {
			"id": "1fHWUucNUkc9b0vkMKSaSbmjtXPw4Nr4-",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1fHWUucNUkc9b0vkMKSaSbmjtXPw4Nr4-&export=download",
			"title": "el cifrulos.rar"
		},
		"timeStamp": "2021-02-05T13:16:58.693Z",
		"score": 0
	},
	{
		"id": "Cg4IzKHH554EEM6K-PWnBw",
		"emailId": "gsurm20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzA5MTkxMzcy",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "1NjyIB0tf1ne1313FVNP__9jk8XDidqL6",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1NjyIB0tf1ne1313FVNP__9jk8XDidqL6&export=download",
			"title": "gsurm20.ennui (1).zip"
		},
		"timeStamp": "2021-02-03T21:46:15.199Z",
		"score": 0
	},
	{
		"id": "Cg4Iy8rH554EEM6K-PWnBw",
		"emailId": "akava20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzA5MTk2NjE5",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "1KrWPxp7KFvh1lo6DTf7wH_9tWoLLWYKA",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1KrWPxp7KFvh1lo6DTf7wH_9tWoLLWYKA&export=download",
			"title": "akava20.zip"
		},
		"timeStamp": "2021-02-04T18:49:25.843Z",
		"score": 0
	},
	{
		"id": "Cg4Iu_760Z8EEM6K-PWnBw",
		"emailId": "ngugu20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1OTMyMzM2OTU1",
		"results": [
			{
				"error": true,
				"message": "TypeError [ERR_INVALID_ARG_VALUE]: The argument 'ISO-8859-1' is invalid encoding. Received 'encoding'"
			}
		],
		"attachment": {
			"id": "1NjmHsJZndwIcJJNKcVoEl568ivBJ5Ffg",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1NjmHsJZndwIcJJNKcVoEl568ivBJ5Ffg&export=download",
			"title": "ngugu20.zip"
		},
		"timeStamp": "2021-02-05T14:19:59.609Z",
		"score": 0
	},
	{
		"id": "Cg4I0pTc5vIEEM6K-PWnBw",
		"emailId": "sasagh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4MjU2MDE0OTMw",
		"results": [
			{
				"error": true,
				"message": "TypeError [ERR_INVALID_ARG_VALUE]: The argument 'ISO-8859-1' is invalid encoding. Received 'encoding'"
			}
		],
		"attachment": {
			"id": "1P2fbkzYMVc-eRZryuzkJwK8Ms4EDXZTc",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1P2fbkzYMVc-eRZryuzkJwK8Ms4EDXZTc&export=download",
			"title": "sasagh20.zip"
		},
		"timeStamp": "2021-02-05T09:02:44.845Z",
		"score": 0
	},
	{
		"id": "Cg4IuoGEwPoEEM6K-PWnBw",
		"emailId": "tniko20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzIyMzYyNTU0",
		"results": [
			{
				"error": true,
				"message": "TypeError [ERR_INVALID_ARG_VALUE]: The argument 'ISO-8859-1' is invalid encoding. Received 'encoding'"
			}
		],
		"attachment": {
			"id": "1j2bZaDANGXI-nPOlAHg7N-YhT6GzAxMD",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1j2bZaDANGXI-nPOlAHg7N-YhT6GzAxMD&export=download",
			"title": "tniko20finalprojectSENT.zip"
		},
		"timeStamp": "2021-02-05T11:15:39.629Z",
		"score": 0
	},
	{
		"id": "Cg4IjruKwPoEEM6K-PWnBw",
		"emailId": "gakhv20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzIyNDY4MjM4",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "1b2ztYEm2UKVgMVYCg7hkR9px5A0_60om",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1b2ztYEm2UKVgMVYCg7hkR9px5A0_60om&export=download",
			"title": "gakhv20.zip"
		},
		"timeStamp": "2021-02-04T18:17:22.195Z",
		"score": 0
	},
	{
		"id": "Cg4IiOq91voEEM6K-PWnBw",
		"emailId": "gtula20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzY5NDQ3MTc2",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "1ISYijYEa0XEmClFhUwxQhcqFsE-9wz9P",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1ISYijYEa0XEmClFhUwxQhcqFsE-9wz9P&export=download",
			"title": "gtula20.zip"
		},
		"timeStamp": "2021-02-04T18:30:09.445Z",
		"score": 0
	},
	{
		"id": "Cg4Ikdjn2_oEEM6K-PWnBw",
		"emailId": "edevi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzgwNjE4NzY5",
		"results": [
			{
				"error": true,
				"message": "TypeError [ERR_INVALID_ARG_VALUE]: The argument 'ISO-8859-1' is invalid encoding. Received 'encoding'"
			}
		],
		"attachment": {
			"id": "1GZP81pxOoBUJ6cZ9CPi0tD9hgcbQdLok",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1GZP81pxOoBUJ6cZ9CPi0tD9hgcbQdLok&export=download",
			"title": "edevi20.zip"
		},
		"timeStamp": "2021-02-05T09:21:40.102Z",
		"score": 0
	},
	{
		"id": "Cg4I7qSk4foEEM6K-PWnBw",
		"emailId": "msukh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzkyMDk3Mzkw",
		"results": [
			{
				"error": true,
				"message": "დავალების ფაილები ვერ მოიძებნა"
			}
		],
		"attachment": {
			"id": "1p68V4PWBBJ_6XL05pb9kwzz-0jT9OBRQ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1p68V4PWBBJ_6XL05pb9kwzz-0jT9OBRQ&export=download",
			"title": "msukh20....zip"
		},
		"timeStamp": "2021-02-04T18:14:58.466Z",
		"score": 0
	},
	{
		"id": "Cg4I6MaI-48FEM6K-PWnBw",
		"emailId": "narab20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2MDgzMzEzNTEy",
		"results": [
			{
				"error": true,
				"message": "დავალება არ არის zip ფაილში"
			}
		],
		"attachment": {
			"id": "1GEYdhpWfZUDHjtg_ClSpp8YxFurK6tPF",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1GEYdhpWfZUDHjtg_ClSpp8YxFurK6tPF&export=download",
			"title": "narab20-finalproject.rar"
		},
		"timeStamp": "2021-02-05T14:53:45.920Z",
		"score": 0
	},
	{
		"id": "Cg4I3pWT64wBEM6K-PWnBw",
		"emailId": "akhub18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/Mzc4MDU2NzMxODJa",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)",
				"score": 2,
				"failed": "expected '0' to deeply equal '2'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected 'მომხმარებელი არ არსებობს' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1cTXtjoVKxvI2Y6w6r1A7B-xpHjmhGpU_",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1cTXtjoVKxvI2Y6w6r1A7B-xpHjmhGpU_&export=download",
			"title": "akhub18_finalproject.zip"
		},
		"timeStamp": "2021-02-04T19:28:34.813Z",
		"score": 14
	},
	{
		"id": "Cg4I7_q32I0BEM6K-PWnBw",
		"emailId": "dvada18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MzgwMzQ4NjU1MTla",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)",
				"score": 2,
				"failed": "expected '0' to deeply equal '2'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected 'მომხმარებელი არ არსებობს' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1i1imE7pBS2B-4CvEV2VSAIWyefQaCpZW",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1i1imE7pBS2B-4CvEV2VSAIWyefQaCpZW&export=download",
			"title": "dvada18_finalproject.zip"
		},
		"timeStamp": "2021-02-04T19:29:12.138Z",
		"score": 14
	},
	{
		"id": "Cg4I29vR7JMBEM6K-PWnBw",
		"emailId": "lkord18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/Mzk2ODc4NDMyOTFa",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)",
				"score": 2,
				"failed": "expected '0' to deeply equal '2'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected 'მომხმარებელი არ არსებობს' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1aUxEsOGlcxoPAkf3xkI90AIqI67AcoIO",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1aUxEsOGlcxoPAkf3xkI90AIqI67AcoIO&export=download",
			"title": "lkord18_finalproject.zip"
		},
		"timeStamp": "2021-02-04T19:59:13.705Z",
		"score": 14
	},
	{
		"id": "Cg4I6OLc35UBEM6K-PWnBw",
		"emailId": "tgorg19",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/NDAxOTc2MzIzNjBa",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1",
				"score": 2,
				"failed": "expected '0 > 0 ? post.likes.length : \"\"} ' to deeply equal ''"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1KHtydKUpEEpKpz-bweZUIBu4-d72oj1s",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1KHtydKUpEEpKpz-bweZUIBu4-d72oj1s&export=download",
			"title": "tgorg19.zip"
		},
		"timeStamp": "2021-02-05T13:38:57.052Z",
		"score": 14
	},
	{
		"id": "Cg4I5KDrnZwBEM6K-PWnBw",
		"emailId": "glapi18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/NDE5Mzg1MDU4Mjha",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1",
				"score": 2,
				"failed": "expected '0 > 0 ? post.likes.length : \"\"}' to deeply equal ''"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1SiuhBRMCCE_bahfx52FD53C0c_k1zRjE",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1SiuhBRMCCE_bahfx52FD53C0c_k1zRjE&export=download",
			"title": "glapi18. final-project-forked.zip"
		},
		"timeStamp": "2021-02-04T22:16:50.203Z",
		"score": 14
	},
	{
		"id": "Cg4IpvCj354EEM6K-PWnBw",
		"emailId": "mchim20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NjkxODM0NDA2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1aZxuBnYvKP5sYxAe4HZ8DsIrt3aGBMuT",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1aZxuBnYvKP5sYxAe4HZ8DsIrt3aGBMuT&export=download",
			"title": "mchim20_final_project.zip"
		},
		"timeStamp": "2021-02-02T14:34:33.709Z",
		"score": 16
	},
	{
		"id": "Cg4I0JrY454EEM6K-PWnBw",
		"emailId": "nkard20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzAxMDgwNDAw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected '' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს",
				"score": 1,
				"failed": "user is undefined"
			},
			{
				"passed": false,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users",
				"score": null,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register.",
				"score": null,
				"failed": "expected null to not equal null"
			},
			{
				"passed": false,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს",
				"score": 1,
				"failed": "users is not defined"
			}
		],
		"attachment": {
			"id": "1mxrDaIHMxICX-dBQrScvAPNGfzcovINn",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1mxrDaIHMxICX-dBQrScvAPNGfzcovINn&export=download",
			"title": "nkard20.zip"
		},
		"timeStamp": "2021-02-05T18:56:31.701Z",
		"score": 9
	},
	{
		"id": "Cg4InbLk6p4EEM6K-PWnBw",
		"emailId": "mturm20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzE1OTYwMDkz",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "17OWjy31cgq42qnb06RVHcqtsF6YpEpS6",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=17OWjy31cgq42qnb06RVHcqtsF6YpEpS6&export=download",
			"title": "mturm20.zip"
		},
		"timeStamp": "2021-02-05T10:43:11.770Z",
		"score": 16
	},
	{
		"id": "Cg4IssWt654EEM6K-PWnBw",
		"emailId": "maberi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzE3MTU4NTc4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1RQHkVesoLwqeIhud67MxSfgACDcWbcbZ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1RQHkVesoLwqeIhud67MxSfgACDcWbcbZ&export=download",
			"title": "maberi20.zip"
		},
		"timeStamp": "2021-01-31T17:22:05.403Z",
		"score": 16
	},
	{
		"id": "Cg4IutyC754EEM6K-PWnBw",
		"emailId": "tchik20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzI0ODQ1NjI2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected '' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს",
				"score": 1,
				"failed": "user is undefined"
			},
			{
				"passed": false,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users",
				"score": null,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register.",
				"score": null,
				"failed": "expected null to not equal null"
			},
			{
				"passed": false,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს",
				"score": 1,
				"failed": "users is not defined"
			}
		],
		"attachment": {
			"id": "1KOFemHexOgmlaCfbSANFokrmVtkGLlrx",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1KOFemHexOgmlaCfbSANFokrmVtkGLlrx&export=download",
			"title": "tchik20_final-project1.zip"
		},
		"timeStamp": "2021-02-05T18:44:35.061Z",
		"score": 9
	},
	{
		"id": "Cg4IzLKz8Z4EEM6K-PWnBw",
		"emailId": "aotin18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzI5ODM3Mzg4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)",
				"score": 2,
				"failed": "expected '0' to deeply equal '2'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected 'მომხმარებელი არ არსებობს' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1hpl0uHYp9MrLb_pgjbGdjKtmuwh2_Z9d",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1hpl0uHYp9MrLb_pgjbGdjKtmuwh2_Z9d&export=download",
			"title": "aotin18_finalproject.zip"
		},
		"timeStamp": "2021-02-04T19:27:42.697Z",
		"score": 14
	},
	{
		"id": "Cg4IqYev8p4EEM6K-PWnBw",
		"emailId": "ateni20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzMxODYzNDY1",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1y7zpgYNF90bxxsbUotRCqONFo8jVIQCv",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1y7zpgYNF90bxxsbUotRCqONFo8jVIQCv&export=download",
			"title": "ateni20(ციფრულის პროექტი).zip"
		},
		"timeStamp": "2021-01-31T11:38:38.082Z",
		"score": 16
	},
	{
		"id": "Cg4IxauK854EEM6K-PWnBw",
		"emailId": "mshat20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzMzMzU5MDQ1",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "10zlIVBk2PCe4WoMC5IxTG47XLAz-HcIw",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=10zlIVBk2PCe4WoMC5IxTG47XLAz-HcIw&export=download",
			"title": "mshat20_final-project.zip"
		},
		"timeStamp": "2021-02-05T14:58:27.664Z",
		"score": 16
	},
	{
		"id": "Cg4I54PE854EEM6K-PWnBw",
		"emailId": "nimach20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzM0MzA0MjMx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1NAgcb_iDgrl4kkLB9-kpXZPrNQ0PsXHH",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1NAgcb_iDgrl4kkLB9-kpXZPrNQ0PsXHH&export=download",
			"title": "nimach20.zip"
		},
		"timeStamp": "2021-02-05T10:42:45.117Z",
		"score": 16
	},
	{
		"id": "Cg4I6dLK954EEM6K-PWnBw",
		"emailId": "akura20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzQyODAxMjU3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1GDC138MBbfe53LpfrFBGgOVE2KGwAfZ7",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1GDC138MBbfe53LpfrFBGgOVE2KGwAfZ7&export=download",
			"title": "akura20 (ციფრულის პროექტი).zip"
		},
		"timeStamp": "2021-02-04T08:12:28.544Z",
		"score": 16
	},
	{
		"id": "Cg4I8daQ-Z4EEM6K-PWnBw",
		"emailId": "mtavk20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzQ2MDQ1ODA5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1dnEnjdLm5mgp86TLyvAYWk_tV4kOlhTj",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1dnEnjdLm5mgp86TLyvAYWk_tV4kOlhTj&export=download",
			"title": "mtavk20 (2).zip"
		},
		"timeStamp": "2021-02-05T19:58:35.847Z",
		"score": 16
	},
	{
		"id": "Cg4Ix7iO-p4EEM6K-PWnBw",
		"emailId": "msolo20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzQ4MTA2MzEx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1xuvfupKVkKO4dEX3X7-TraeSZZy2mgSH",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1xuvfupKVkKO4dEX3X7-TraeSZZy2mgSH&export=download",
			"title": "msolo20 (2).zip"
		},
		"timeStamp": "2021-02-05T10:26:41.887Z",
		"score": 16
	},
	{
		"id": "Cg4I6NrZgZ8EEM6K-PWnBw",
		"emailId": "schin20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzY0MDE5NTYw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected '' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს",
				"score": 1,
				"failed": "user is undefined"
			},
			{
				"passed": false,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users",
				"score": null,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register.",
				"score": null,
				"failed": "expected null to not equal null"
			},
			{
				"passed": false,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს",
				"score": 1,
				"failed": "users is not defined"
			}
		],
		"attachment": {
			"id": "1mKo1XLqrIoUCWZ39Cv6QeIHJjP45VmXP",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1mKo1XLqrIoUCWZ39Cv6QeIHJjP45VmXP&export=download",
			"title": "schin20.zip"
		},
		"timeStamp": "2021-02-05T18:52:41.850Z",
		"score": 9
	},
	{
		"id": "Cg4IpIHMpKEEEM6K-PWnBw",
		"emailId": "nabsh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ2Mzc0MDY2MzQw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1yvHe33hak_FAKUKvL8KTVPrcmzctkm2q",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1yvHe33hak_FAKUKvL8KTVPrcmzctkm2q&export=download",
			"title": "nabsh20.zip"
		},
		"timeStamp": "2021-01-31T17:49:02.059Z",
		"score": 16
	},
	{
		"id": "Cg4ImZr3xPQEEM6K-PWnBw",
		"emailId": "kbard20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4NzIyMDI1NzUz",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1-Rh-quIKHTfkIb8j7EJHeyvzmzfQP6hI",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1-Rh-quIKHTfkIb8j7EJHeyvzmzfQP6hI&export=download",
			"title": "kbard20_final-project.zip"
		},
		"timeStamp": "2021-02-05T11:26:30.407Z",
		"score": 16
	},
	{
		"id": "Cg4I0Z7B6fQEEM6K-PWnBw",
		"emailId": "mtsik20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4Nzk4NzM2MjA5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1Gs5MZDLqh_sOXcr4vhldE3z3tvT3HWKt",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1Gs5MZDLqh_sOXcr4vhldE3z3tvT3HWKt&export=download",
			"title": "mtsik20(ციფრულის პროექტი).zip"
		},
		"timeStamp": "2021-02-04T10:24:05.582Z",
		"score": 16
	},
	{
		"id": "Cg4I19iW1_oEEM6K-PWnBw",
		"emailId": "mmind20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzcwOTAzMTI3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1",
				"score": 2,
				"failed": "expected '0 > 0 ? post.likes.length : \"\"} ' to deeply equal ''"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1ecYrDdS4qVJA5eXJAr6avWNhDOMShwRm",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1ecYrDdS4qVJA5eXJAr6avWNhDOMShwRm&export=download",
			"title": "mmind20_finalproject.zip"
		},
		"timeStamp": "2021-02-05T13:40:46.611Z",
		"score": 14
	},
	{
		"id": "Cg4IuLeP2PoEEM6K-PWnBw",
		"emailId": "lkeva20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzcyODgxMzM2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "19uD7O3rGFlZTnCMluPoRocNTWFjS2FD7",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=19uD7O3rGFlZTnCMluPoRocNTWFjS2FD7&export=download",
			"title": "Lkeva20.zip"
		},
		"timeStamp": "2021-01-31T18:53:01.786Z",
		"score": 16
	},
	{
		"id": "Cg4Ilryt2PoEEM6K-PWnBw",
		"emailId": "madavi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzczMzczNDYy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1_w0JBdKnhwEW-EwKcOc7mz94PPv2vi-_",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1_w0JBdKnhwEW-EwKcOc7mz94PPv2vi-_&export=download",
			"title": "madavi20.zip"
		},
		"timeStamp": "2021-02-05T07:59:57.818Z",
		"score": 16
	},
	{
		"id": "Cg4IzfzG2PoEEM6K-PWnBw",
		"emailId": "mtish20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzczNzkxMzA5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": false,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1",
				"score": 2,
				"failed": "expected '0 > 0 ? post.likes.length : \"\"} ' to deeply equal ''"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1MScoiSwZlMnb601-dkgkEC4Wj0ZR_ZHj",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1MScoiSwZlMnb601-dkgkEC4Wj0ZR_ZHj&export=download",
			"title": "mtish20_finalproject.zip"
		},
		"timeStamp": "2021-02-05T18:56:50.280Z",
		"score": 14
	},
	{
		"id": "Cg4I_pDZ2PoEEM6K-PWnBw",
		"emailId": "rshen20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc0MDg4ODMw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1a5sL--KNEALvw5DXL5coDXUoZsI0tf3Q",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1a5sL--KNEALvw5DXL5coDXUoZsI0tf3Q&export=download",
			"title": "rshen20.zip"
		},
		"timeStamp": "2021-01-31T10:42:59.541Z",
		"score": 16
	},
	{
		"id": "Cg4In-SV2voEEM6K-PWnBw",
		"emailId": "nmike20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc3MTc5Njc5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "15tmO9ocsgNatjqjK7gG20oYRLaXAa2Qr",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=15tmO9ocsgNatjqjK7gG20oYRLaXAa2Qr&export=download",
			"title": "BlackBulls2.zip"
		},
		"timeStamp": "2021-02-05T08:49:36.638Z",
		"score": 16
	},
	{
		"id": "Cg4I6-202voEEM6K-PWnBw",
		"emailId": "schkh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc3Njg4ODEx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1bkmWWr7Aj4SiGLzESCAZDGMmDhNESoOm",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1bkmWWr7Aj4SiGLzESCAZDGMmDhNESoOm&export=download",
			"title": "BlackBulls3 (schkh20).zip"
		},
		"timeStamp": "2021-02-05T08:54:59.095Z",
		"score": 16
	},
	{
		"id": "Cg4InP_b2voEEM6K-PWnBw",
		"emailId": "mptsk20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc4MzMwMDEy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "12fSUGgNrsNfutOx9x019HyrDylHbzK-H",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=12fSUGgNrsNfutOx9x019HyrDylHbzK-H&export=download",
			"title": "mptsk20.zip"
		},
		"timeStamp": "2021-02-05T06:38:15.072Z",
		"score": 16
	},
	{
		"id": "Cg4InPHt2voEEM6K-PWnBw",
		"emailId": "sshon19",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc4NjIzMTMy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1vdb-lyyOTlBHwWKk8cq7qRvorNkFIwpk",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1vdb-lyyOTlBHwWKk8cq7qRvorNkFIwpk&export=download",
			"title": "sshon19(ციფრულის პროექტი).zip"
		},
		"timeStamp": "2021-02-04T11:26:38.025Z",
		"score": 16
	},
	{
		"id": "Cg4Ixvjn2_oEEM6K-PWnBw",
		"emailId": "ndias20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzgwNjIyOTE4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1XMOZYRx03hYsKHoMJvmFAJTkYsmbPJKK",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1XMOZYRx03hYsKHoMJvmFAJTkYsmbPJKK&export=download",
			"title": "ndias20_final-project.zip"
		},
		"timeStamp": "2021-02-05T14:21:12.428Z",
		"score": 16
	},
	{
		"id": "Cg4It76o3PoEEM6K-PWnBw",
		"emailId": "tlobz20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzgxNjgwNDM5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'",
				"score": 1,
				"failed": "expected '' to deeply equal 'პაროლი არასწორია'"
			},
			{
				"passed": false,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს",
				"score": 1,
				"failed": "user is undefined"
			},
			{
				"passed": false,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users",
				"score": null,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password",
				"score": null,
				"failed": "getInput(...) is null"
			},
			{
				"passed": false,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register.",
				"score": null,
				"failed": "expected null to not equal null"
			},
			{
				"passed": false,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი",
				"score": 1,
				"failed": "users is not defined"
			},
			{
				"passed": false,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს",
				"score": 1,
				"failed": "users is not defined"
			}
		],
		"attachment": {
			"id": "11KXa9jaMJus3T8AROYhHJmPR6FeZuMfy",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=11KXa9jaMJus3T8AROYhHJmPR6FeZuMfy&export=download",
			"title": "tlobz20.zip"
		},
		"timeStamp": "2021-02-05T18:45:54.388Z",
		"score": 9
	},
	{
		"id": "Cg4I2dnL3PoEEM6K-PWnBw",
		"emailId": "ttsin20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzgyMjU3MzY5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1Xn5Kc3adBEzRI6zdIiUVKpjF-w1Y-ZgU",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1Xn5Kc3adBEzRI6zdIiUVKpjF-w1Y-ZgU&export=download",
			"title": "ttsin20.zip"
		},
		"timeStamp": "2021-01-29T19:12:39.939Z",
		"score": 16
	},
	{
		"id": "Cg4IgrLf4PoEEM6K-PWnBw",
		"emailId": "tivan20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzkwOTY4NTc4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1gCGxMA5eyM3Fe9oExWNwzrpeIce8gY5F",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1gCGxMA5eyM3Fe9oExWNwzrpeIce8gY5F&export=download",
			"title": "tivan20_final-project.zip"
		},
		"timeStamp": "2021-02-05T14:56:39.701Z",
		"score": 16
	},
	{
		"id": "Cg4I0Ib-4PoEEM6K-PWnBw",
		"emailId": "apiti20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzkxNDcwOTI4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1_bNPe0889sfCaGrST1HZQ4CUB-g1kdMP",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1_bNPe0889sfCaGrST1HZQ4CUB-g1kdMP&export=download",
			"title": "apiti20.zip"
		},
		"timeStamp": "2021-02-05T12:52:05.240Z",
		"score": 16
	},
	{
		"id": "Cg4I3aPM848FEM6K-PWnBw",
		"emailId": "gkavl20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2MDY3NjQ1OTE3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1wbt4xld2nrc-HkM_n-WTbMTNDq1LNHsy",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1wbt4xld2nrc-HkM_n-WTbMTNDq1LNHsy&export=download",
			"title": "gkavl20 BlackBulls4.zip"
		},
		"timeStamp": "2021-02-05T14:28:00.706Z",
		"score": 16
	},
	{
		"id": "Cg4I6LTG-Y8FEM6K-PWnBw",
		"emailId": "egagn20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2MDgwMTMyNzEy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1-pqZXuZDEWjDahu8mgKyLL8kIBPk9o7a",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1-pqZXuZDEWjDahu8mgKyLL8kIBPk9o7a&export=download",
			"title": "BlackBulls1.zip"
		},
		"timeStamp": "2021-02-05T08:04:49.153Z",
		"score": 16
	},
	{
		"id": "Cg4Iqd7zmJIFEM6K-PWnBw",
		"emailId": "lbegi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2NjgyNzU3OTI5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": false,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)",
				"score": 1,
				"failed": "expected '0' to deeply equal '21'"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1m45ImxCvlHb2broKFFQAghFsRR8LP-vQ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1m45ImxCvlHb2broKFFQAghFsRR8LP-vQ&export=download",
			"title": "lbegi20.final.zip"
		},
		"timeStamp": "2021-01-29T19:18:42.913Z",
		"score": 16
	},
	{
		"id": "Cg4Igvui7qIEEM6K-PWnBw",
		"emailId": "mvard20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ2Nzk3MDE4NDk4",
		"late": true,
		"results": [],
		"attachment": {
			"id": "1vn-k5mfkcamSHhyscEGUEF9IbsqDzDO3",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1vn-k5mfkcamSHhyscEGUEF9IbsqDzDO3&export=download",
			"title": "mvard20.zip"
		},
		"timeStamp": "2021-02-06T23:11:28.864Z"
	},
	{
		"id": "Cg0Iw9a_okQQzor49acH",
		"emailId": "ainau18",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTgzMjU5NTc0NDNa",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1bqDr2xhtKZ-SI9mR1deZQtRJsSl4vzVJ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1bqDr2xhtKZ-SI9mR1deZQtRJsSl4vzVJ&export=download",
			"title": "ainau18.zip"
		},
		"timeStamp": "2021-01-31T18:22:10.066Z",
		"score": 17
	},
	{
		"id": "Cg4Iid7q6J4EEM6K-PWnBw",
		"emailId": "nkats20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzExODY5NzA1",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1S0j55lM2FvAhud9AnHyNjlXjLX-Cz9eQ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1S0j55lM2FvAhud9AnHyNjlXjLX-Cz9eQ&export=download",
			"title": "nkats20.zip"
		},
		"timeStamp": "2021-02-05T13:36:34.570Z",
		"score": 17
	},
	{
		"id": "Cg4Igvzx6J4EEM6K-PWnBw",
		"emailId": "gdzam20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzExOTg4MjI2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1w91oye0FRk8UQHBeMVa5ua8-tJ0wkxWu",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1w91oye0FRk8UQHBeMVa5ua8-tJ0wkxWu&export=download",
			"title": "gdzam20.rar.zip"
		},
		"timeStamp": "2021-02-04T11:04:38.460Z",
		"score": 17
	},
	{
		"id": "Cg4I65X26J4EEM6K-PWnBw",
		"emailId": "mkila20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzEyMDU3MDY3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1B8THhAcBxTkzAeAb0_lH763DyjngzJTr",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1B8THhAcBxTkzAeAb0_lH763DyjngzJTr&export=download",
			"title": "mkila20.zip"
		},
		"timeStamp": "2021-02-01T16:54:53.174Z",
		"score": 17
	},
	{
		"id": "Cg4IpNOR6Z4EEM6K-PWnBw",
		"emailId": "mtoro20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzEyNTA3MzAw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1mSSNx1lKAeozgUky1GbVLmkbtrCh6NWq",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1mSSNx1lKAeozgUky1GbVLmkbtrCh6NWq&export=download",
			"title": "mtoro 20.zip"
		},
		"timeStamp": "2021-02-05T16:14:00.265Z",
		"score": 17
	},
	{
		"id": "Cg4Iwe-a6p4EEM6K-PWnBw",
		"emailId": "nkukh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzE0NzU1NTIx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1GzK__a2KruQZft6gyq87zQwL76hP07BM",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1GzK__a2KruQZft6gyq87zQwL76hP07BM&export=download",
			"title": "nkukh20.zip"
		},
		"timeStamp": "2021-02-05T18:19:23.268Z",
		"score": 17
	},
	{
		"id": "Cg4Iiaj86p4EEM6K-PWnBw",
		"emailId": "atsik20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzE2MzUyMDA5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1uOGCRrNFz3XFiG5FFZGjG0SvMV2GO8lD",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1uOGCRrNFz3XFiG5FFZGjG0SvMV2GO8lD&export=download",
			"title": "ani tsikhelashvili.zip"
		},
		"timeStamp": "2021-02-01T13:27:22.832Z",
		"score": 17
	},
	{
		"id": "Cg4IzIj58J4EEM6K-PWnBw",
		"emailId": "dende20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ1NzI4ODgxNzQw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1V0VgsUerS2_uC6C2tvQTR-zhudCUuH81",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1V0VgsUerS2_uC6C2tvQTR-zhudCUuH81&export=download",
			"title": "dende20.zip"
		},
		"timeStamp": "2021-02-05T19:23:27.733Z",
		"score": 17
	},
	{
		"id": "Cg4I5dLFgKAEEM6K-PWnBw",
		"emailId": "etsin20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ2MDMwMDI5MTU3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1YErRmdJfckkd1K3EPlG-gorhzWunNGSr",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1YErRmdJfckkd1K3EPlG-gorhzWunNGSr&export=download",
			"title": "etsin20.zip"
		},
		"timeStamp": "2021-02-05T19:24:34.239Z",
		"score": 17
	},
	{
		"id": "Cg4I_ICO96IEEM6K-PWnBw",
		"emailId": "vgvar20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTQ2ODE1NTQ5NTY0",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1nSe6UOZ7AixDzZwRFffpp3KUfk2s0ViU",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1nSe6UOZ7AixDzZwRFffpp3KUfk2s0ViU&export=download",
			"title": "Vgvar20.zip"
		},
		"timeStamp": "2021-02-05T15:13:38.410Z",
		"score": 17
	},
	{
		"id": "Cg4Iu8u8uPQEEM6K-PWnBw",
		"emailId": "mgord20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4Njk1ODk5NTc5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1id08Hb2eEaHVp961wKaEuR1fHhsLMBHA",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1id08Hb2eEaHVp961wKaEuR1fHhsLMBHA&export=download",
			"title": "mariam gordadze.zip"
		},
		"timeStamp": "2021-02-01T14:34:17.253Z",
		"score": 17
	},
	{
		"id": "Cg4Ir4KuofUEEM6K-PWnBw",
		"emailId": "nmagh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4OTE1ODYxODA3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1iDFeOW5zznAnq0u_p0k6D_VbcC2TZx0G",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1iDFeOW5zznAnq0u_p0k6D_VbcC2TZx0G&export=download",
			"title": "nmagh20.zip"
		},
		"timeStamp": "2021-02-05T15:10:17.925Z",
		"score": 17
	},
	{
		"id": "Cg4I2PaOo_UEEM6K-PWnBw",
		"emailId": "nchig20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY4OTE5NTQ2NzEy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1De31E_SOPnb9mBdI3Yd9Pj8v9guLiT0F",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1De31E_SOPnb9mBdI3Yd9Pj8v9guLiT0F&export=download",
			"title": "nchig20.zip"
		},
		"timeStamp": "2021-02-05T14:59:13.887Z",
		"score": 17
	},
	{
		"id": "Cg4I1IXJ9_YEEM6K-PWnBw",
		"emailId": "mugul20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTY5MzY1MDk1MTI0",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1A5R8Vb_CeBSb_OotMSZIlPSRgIpvfgk_",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1A5R8Vb_CeBSb_OotMSZIlPSRgIpvfgk_&export=download",
			"title": "mugul20.zip"
		},
		"timeStamp": "2021-02-05T18:19:01.581Z",
		"score": 17
	},
	{
		"id": "Cg4IubiZv_oEEM6K-PWnBw",
		"emailId": "nbits20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzIwNjE2NTA1",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1wI7ACj1lK3un1I7ZzFG4hi0U3osUOErI",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1wI7ACj1lK3un1I7ZzFG4hi0U3osUOErI&export=download",
			"title": "nbits20.zip"
		},
		"timeStamp": "2021-02-05T18:13:57.454Z",
		"score": 17
	},
	{
		"id": "Cg4IwMKawPoEEM6K-PWnBw",
		"emailId": "stsno20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzIyNzMxMzI4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1fDXd6xuag7xkie7mz8jQFwcilWNFkINY",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1fDXd6xuag7xkie7mz8jQFwcilWNFkINY&export=download",
			"title": "stsno20.zip"
		},
		"timeStamp": "2021-01-31T16:43:26.839Z",
		"score": 17
	},
	{
		"id": "Cg4Iqszo1foEEM6K-PWnBw",
		"emailId": "nsebi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzY4MDUwNzMw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "18AnHBAf7qyAzXkH5KJm6wBFCi9Q589Bb",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=18AnHBAf7qyAzXkH5KJm6wBFCi9Q589Bb&export=download",
			"title": "nsebi20.zip"
		},
		"timeStamp": "2021-02-05T16:43:28.816Z",
		"score": 17
	},
	{
		"id": "Cg4I46z81foEEM6K-PWnBw",
		"emailId": "akapa20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzY4Mzc0Mzcx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1ITDyn6gRrwzFyXVSmVZCtWpRUuhs7CEL",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1ITDyn6gRrwzFyXVSmVZCtWpRUuhs7CEL&export=download",
			"title": "akapa20.zip"
		},
		"timeStamp": "2021-02-05T18:03:42.101Z",
		"score": 17
	},
	{
		"id": "Cg4ItoSJ1_oEEM6K-PWnBw",
		"emailId": "mmosi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzcwNjc5MzUw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "18EfQiYQvmdorpCHxJ91Mmswc0dzWFSiT",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=18EfQiYQvmdorpCHxJ91Mmswc0dzWFSiT&export=download",
			"title": "mmosi20.zip"
		},
		"timeStamp": "2021-02-05T14:56:30.702Z",
		"score": 17
	},
	{
		"id": "Cg4IvaHR1_oEEM6K-PWnBw",
		"emailId": "abukh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzcxODYyNzE3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1QGfhfFvpu88nmYT3HJ-62DbjeoXi0ve5",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1QGfhfFvpu88nmYT3HJ-62DbjeoXi0ve5&export=download",
			"title": "abukh20.zip"
		},
		"timeStamp": "2021-01-31T15:51:37.360Z",
		"score": 17
	},
	{
		"id": "Cg4IjvqH2PoEEM6K-PWnBw",
		"emailId": "tvakh20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzcyNzU4Nzk4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1I28hZXgD6ZdeaTRepYB2EM-2IU6A0v8j",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1I28hZXgD6ZdeaTRepYB2EM-2IU6A0v8j&export=download",
			"title": "tvakh20.zip"
		},
		"timeStamp": "2021-02-05T14:58:02.727Z",
		"score": 17
	},
	{
		"id": "Cg4IkrvJ2PoEEM6K-PWnBw",
		"emailId": "nghel20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzczODMyMDgy",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "17VPjsvoF5C_vXmZviij24rjv7aITA_Rd",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=17VPjsvoF5C_vXmZviij24rjv7aITA_Rd&export=download",
			"title": "nghel20.zip"
		},
		"timeStamp": "2021-01-31T17:08:58.831Z",
		"score": 17
	},
	{
		"id": "Cg4ImNng2PoEEM6K-PWnBw",
		"emailId": "lchik20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc0MjEyNzYw",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1Bhch_9ZXKCEVUpccBFBHlShlIPRhlNRl",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1Bhch_9ZXKCEVUpccBFBHlShlIPRhlNRl&export=download",
			"title": "lile chikhladze.zip"
		},
		"timeStamp": "2021-02-01T13:19:45.203Z",
		"score": 17
	},
	{
		"id": "Cg4Iktec2foEEM6K-PWnBw",
		"emailId": "nlogu20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc1MTk1NTM4",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1px8KImRHPxtjbQctkcSD2vhPKkJfj-VL",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1px8KImRHPxtjbQctkcSD2vhPKkJfj-VL&export=download",
			"title": "nlogu20.zip"
		},
		"timeStamp": "2021-02-05T18:20:34.679Z",
		"score": 17
	},
	{
		"id": "Cg4Ixoad2foEEM6K-PWnBw",
		"emailId": "mlomi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc1MjAxNjA2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1cSKMmODEkZHc-Ix_PVeBxFLTc-SMr_tl",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1cSKMmODEkZHc-Ix_PVeBxFLTc-SMr_tl&export=download",
			"title": "mlomi20@finalpro.zip"
		},
		"timeStamp": "2021-02-05T19:23:18.338Z",
		"score": 17
	},
	{
		"id": "Cg4Is8ij2foEEM6K-PWnBw",
		"emailId": "gmais20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc1MzA4MzM5",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1RWcqv9aKmtvmGYnQw_jj01sXcCHRvk-5",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1RWcqv9aKmtvmGYnQw_jj01sXcCHRvk-5&export=download",
			"title": "gmais20.zip"
		},
		"timeStamp": "2021-01-31T12:37:44.087Z",
		"score": 17
	},
	{
		"id": "Cg4Ik5ix2_oEEM6K-PWnBw",
		"emailId": "atsag20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzc5NzI1ODQz",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1KMchHI53Stg4pixVhUy6c_VtGQ5PVYWj",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1KMchHI53Stg4pixVhUy6c_VtGQ5PVYWj&export=download",
			"title": "atsag20@.zip"
		},
		"timeStamp": "2021-02-05T19:24:38.426Z",
		"score": 17
	},
	{
		"id": "Cg4Igcuv3PoEEM6K-PWnBw",
		"emailId": "lloma20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTcwMzgxNzk2NzM3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "15rwcaHoBauyiW94XiZOoYFoMQOGz38IQ",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=15rwcaHoBauyiW94XiZOoYFoMQOGz38IQ&export=download",
			"title": "lloma20.zip"
		},
		"timeStamp": "2021-01-31T16:44:52.866Z",
		"score": 17
	},
	{
		"id": "Cg4IltL4rI8FEM6K-PWnBw",
		"emailId": "tbasi20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc1OTE5NDc0OTY2",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1HQglWeE28ofZ-AkD1OxUY4PTt3kjmO3k",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1HQglWeE28ofZ-AkD1OxUY4PTt3kjmO3k&export=download",
			"title": "tamar basiashvili.zip"
		},
		"timeStamp": "2021-02-01T13:17:22.874Z",
		"score": 17
	},
	{
		"id": "Cg4I6ZmPmJIFEM6K-PWnBw",
		"emailId": "lkimo20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2NjgxMTEwNzYx",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "18OybjqiZjGPIvc0rbmn1sKtOxCcpacIN",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=18OybjqiZjGPIvc0rbmn1sKtOxCcpacIN&export=download",
			"title": "lkimo20.rar (2).zip"
		},
		"timeStamp": "2021-02-04T13:24:21.812Z",
		"score": 17
	},
	{
		"id": "Cg4It6j4gpMFEM6K-PWnBw",
		"emailId": "ltsev20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2OTA1MTMxMDYz",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1i7jpz_CAXe_3jmz_QQfpT0y3nRbER2aW",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1i7jpz_CAXe_3jmz_QQfpT0y3nRbER2aW&export=download",
			"title": "ltseve.zip"
		},
		"timeStamp": "2021-02-05T16:36:05.408Z",
		"score": 17
	},
	{
		"id": "Cg4I7YTHrJMFEM6K-PWnBw",
		"emailId": "nkada20",
		"state": "TURNED_IN",
		"alternateLink": "https://classroom.google.com/c/MTcwMzM0NjcxNzcz/a/MjUxMjM0NDg1NTgy/submissions/student/MTc2OTkyNDA0MDc3",
		"results": [
			{
				"passed": true,
				"score": null,
				"message": "ელემენტები: დოკუმენტს უნდა ქონდეს პოსტების ელემენტი, რომლის id \n                არის post_container.\n\n                post_container ელემენტში არსებობს textarea, რომლის id არის \n                post_text.\n\n                post_container ელემენტში არსებობს ღილაკი, რომლის\n                id არის new_post\n\n                post_container ელემენტში დაპოსტილი პოსტებისთვის არსებობს div ელემენტი,\n                რომლის id არის posts\n\n                "
			},
			{
				"passed": true,
				"score": null,
				"message": "ამ ღილაკზე დაჭერის შემდეგ პოსტის ველში შეყვანილი ტექსტი უნდა \n                დაემატოს პოსტების ფიდში (დაპოსტილი პოსტები). \n                თითოეული პოსტისთვის შექმენით ახალი ელემენტი, რომელსაც ექნება კლასი \n                post. აქ შეგიძლიათ სხვადასხვა ელემენტები იყოს. მთავარია, \n                უშუალოდ პოსტის ტექსტის div-ს ქონდეს კლასი post_text"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტი არ დაიდოს, თუ post_text ველში ტექსტი არ არის შეყვანილი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. ახალი პოსტის გამოქვეყნების შემდეგ post_text ველი გასუფთავდეს"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ პოსტს არ აქვს არცერთი ლაიქი, post_likes_text \n            და post_likes_count ელემენტებში არაფერი ეწეროს. ერთი დალაიქების შემდეგ\n            post_likes_text ელემენტში უნდა ეწეროს likes, \n            post_likes_count ელემენტში 1"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. თუ ერთი მომხმარებელი მეორედ დააჭერს მოწონების ღილაკს, \n            მისი მოწონება წაიშლება (ანუ მოწონებების რაოდენობა \n            შემცირდება)"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პოსტის ობიექტს აქვს ატრიბუტი date, რომლის\n            მნიშვნელობაც არის post ღილაკზე დაჭერის დრო"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა.  ფიდში post ელემენტს \n            დაუმატეთ ახალი div, რომლის კლასი არის post_date. \n            მისი მნიშვნელობა უნდა იყოს დაპოსტვის დღე (მხოლოდ თარიღი)"
			},
			{
				"passed": true,
				"score": 2,
				"message": "2 ქულა. * ორმაგი ფილტრი. პოსტები უნდა იყოს დალაგებული \n        თარიღის მიხედვით (ახალი პოსტები გამოჩნდეს პირველი). \n        თუ ორი პოსტი ერთ თარიღს არის დაპოსტილი (თვე, წელი, დღე), \n        მაშინ დალაგდეს კომენტარის რაოდენობის და ლაიქების \n        ჯამის მიხედვით (კლებადი). გაითვალისწინეთ, რომ სორტირებულ\n        სიაში ელემენტების მიმდევრობა უნდა იყოს პირიქით (რომ ფიდში \n        სწორად გამოჩნდეს)"
			},
			{
				"passed": true,
				"score": null,
				"message": "ავტორიზაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n        password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს ღილაკი, რომლის id არის \n        login."
			},
			{
				"passed": true,
				"score": null,
				"message": "საიტზე არსებობს div ელემენტი, რომლის id არის error_message \n         და თავიდან ცარიელია"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი პაროლი არ არის სწორი, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი 'პაროლი არასწორია'"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. თუ მომხმარებლის შეყვანილი username არ არსებობს, error_message\n        ელემენტში უნდა დაეწეროს ტექსტი მომხმარებელი არ არსებობს"
			},
			{
				"passed": true,
				"score": null,
				"message": "რეგისტრაციის გვერდზე არსებობს users ბაზა, რომელიც შენახულია ცვლადში users"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      username. ელემენტის type არის text"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს input ელემენტი, რომლის id არის \n      repeat_password. ელემენტის type არის password"
			},
			{
				"passed": true,
				"score": null,
				"message": "გვერდზე არსებობს რეგისტრაციის ღილაკი, რომლის id არის \n      register."
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. რეგისტრაციის ღილაკზე დაჭერის შემთხვევაში users\n         ბაზაში ემატება მომხმარებელი username სახელით და \n         password პაროლით"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეყვანილი username უკვე არსებობს"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. პაროლი და გამეორებული პაროლი არ ემთხვევა"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. არის მინიმუმ 8 სიმბოლოიანი"
			},
			{
				"passed": true,
				"score": 1,
				"message": "1 ქულა. შეიცავს მინიმუმ ერთ lowercase და ერთ uppercase\n            სიმბოლოს და ციფრს"
			}
		],
		"attachment": {
			"id": "1ZDyBK03wyV-eIFtBZrWElOWviSLVC4jG",
			"downloadUrl": "https://drive.google.com/a/freeuni.edu.ge/uc?authuser=0&id=1ZDyBK03wyV-eIFtBZrWElOWviSLVC4jG&export=download",
			"title": "nkada.zip"
		},
		"timeStamp": "2021-02-05T16:33:26.696Z",
		"score": 17
	}
]